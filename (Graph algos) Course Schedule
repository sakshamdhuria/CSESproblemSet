#include <bits/stdc++.h>
using namespace std;
 
#define int long long 
const long long  mod =1e9+7;
vector<int> vis;
vector<vector<int>> adjList;
vector<int> ans;
bool isCycle=false;

void dfs(int i){
    vis[i]=1;
    for(int neighbor: adjList[i]){
        if(vis[neighbor]==0){
            dfs(neighbor);
        }
        if(vis[neighbor]==1){
            isCycle=true;
        }
    }
    vis[i]=2;
    ans.push_back(i);
}
int32_t main() {
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    int n, m;
    cin>>n>>m;
    vis.resize(n+1, 0);
    adjList.resize(n+1);
 
    for(int i=0; i<m; i++){
        int a, b;
        cin>>a>>b;
        adjList[a].push_back(b);
    }
    for(int i=1; i<=n; i++){
        if(vis[i]==0){
            dfs(i);
            if(isCycle){
                cout<<"IMPOSSIBLE";
                return 0;
            }
        }
    }

    reverse(ans.begin(), ans.end());
    for(int i=0; i<n; i++){
        cout<<ans[i]<<" ";
    }
    
    return 0;
}
